FROM openjdk:8

RUN apt-get update && apt-get install curl -y
RUN curl -L http://apache.cs.utah.edu/kafka/1.1.1/kafka_2.12-1.1.1.tgz | tar -xz -C /opt/ 
RUN curl -L https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.0/jmx_prometheus_javaagent-0.3.0.jar -o /opt/jmx_prometheus_javaagent-0.3.0.jar

# Kafka Manager
RUN git clone https://github.com/yahoo/kafka-manager.git
WORKDIR ./kafka-manager
RUN ./sbt clean dist
RUN unzip target/universal/kafka-manager-1.3.3.21.zip
# end Kafka Manager

# create kafka certificates
WORKDIR /opt/

# create keystore for broker
RUN keytool -keystore server.keystore.jks -alias localhost -validity 999 -genkey -keyalg RSA -dname "CN=example.com, OU=ID, O=test, L=test, S=test, C=GB" -storepass keystorepassword -keypass keystorekeypassword
# create CA
RUN openssl req -new -x509 -keyout ca-key -out ca-cert -days 365 -passout pass:capassword -subj "/C=GB/CN=test"
# import CA cert to client's truststore
RUN keytool -keystore client.truststore.jks -alias CARoot -import -file ca-cert -storepass clienttruststorepassword -noprompt
# import the CA cert into the broker's trust store (needed to verify client keys signed by this CA)
RUN keytool -keystore server.truststore.jks -alias CARoot -import -file ca-cert -storepass servertruststorepassword -noprompt

# next need to sign the keys
# first export the keystore certs to a file
RUN keytool -keystore server.keystore.jks -alias localhost -certreq -file cert-file -storepass keystorepassword -keypass keystorekeypassword
# sign the certificate with the CA
RUN openssl x509 -req -CA ca-cert -CAkey ca-key -in cert-file -out cert-signed -days 999 -CAcreateserial -passin pass:capassword
# import both the certificate of the CA and the signed certificate into the keystore:
RUN keytool -keystore server.keystore.jks -alias CARoot -import -file ca-cert -storepass keystorepassword -noprompt
RUN keytool -keystore server.keystore.jks -alias localhost -import -file cert-signed -storepass keystorepassword -noprompt -keypass keystorekeypassword

# end create keys

WORKDIR /
